---
import { cn } from '@/lib/utils';
import { cva, type VariantProps } from 'class-variance-authority';
import {
    semanticVariants,
    sizes,
    overflowVariants,
} from '@/lib/component-variants';

const badgeVariants = cva(
    'inline-flex items-center justify-center rounded-full border border-transparent font-semibold font-mono tabular-nums transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',
    {
        variants: {
            variant: semanticVariants,
            size: sizes,
            overflow: overflowVariants,
        },
    }
);

export interface Props extends VariantProps<typeof badgeVariants> {
    class?: string;
    [key: string]: any; // Alpine.js pass-through
}

const {
    variant = 'default',
    size = 'sm',
    overflow = 'fixed',
    class: className,
    ...alpineProps
} = Astro.props;
---

<!-- 
Badge Component (shadcn/ui style)

Usage:
<Badge variant="default">Default</Badge>
<Badge variant="secondary">Secondary</Badge> 
<Badge variant="destructive">Error</Badge>
<Badge variant="outline">Outline</Badge>

Variants: default, secondary, destructive, outline
Supports Alpine.js props: x-data, @click, :class, etc.
-->
<span
    class={cn(badgeVariants({ variant, size, overflow }), className)}
    {...alpineProps}
>
    <slot />
</span>
