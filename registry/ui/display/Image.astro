---
import { cn } from '@/lib/utils';
import { cva, type VariantProps } from 'class-variance-authority';
import { shapes } from '@/lib/component-variants';

const imageVariants = cva('relative overflow-hidden', {
  variants: {
    aspectRatio: {
      auto: '',
      '1/1': 'aspect-square',
      '16/9': 'aspect-video',
      '4/3': 'aspect-[4/3]',
      '3/2': 'aspect-[3/2]'
    },
    objectFit: {
      cover: '[&>img]:object-cover',
      contain: '[&>img]:object-contain',
      fill: '[&>img]:object-fill',
      none: '[&>img]:object-none',
      scaleDown: '[&>img]:object-scale-down'
    },
    shape: shapes
  },
  defaultVariants: {
    aspectRatio: 'auto',
    objectFit: 'cover',
    shape: 'rectangle'
  }
});

export interface Props extends VariantProps<typeof imageVariants> {
  src: string;
  alt?: string;
  overlay?: string;
  loading?: 'lazy' | 'eager';
  class?: string;
  // Alpine.js pass-through
  [key: string]: any;
}

const { 
  src,
  alt = '',
  aspectRatio,
  objectFit,
  shape,
  overlay,
  loading = 'lazy',
  class: className,
  ...alpineProps
} = Astro.props;
---

<div 
  class={cn(
    imageVariants({ aspectRatio, objectFit, shape }),
    className
  )}
  {...alpineProps}
>
  <img 
    src={src}
    alt={alt}
    loading={loading}
    class="w-full h-full"
  />
  {overlay && (
    <div class={cn("absolute inset-0", overlay)}></div>
  )}
  <slot />
</div>